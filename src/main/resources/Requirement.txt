II. Implement functionality using which customers can browse the Hotel rooms.
    Problem Statement:
        You are building a Hotel Management System. As a part of this system, you need to implement functionality using which customers can browse the hotel rooms.
    Requirements:
        i.   The get rooms request will get room type as input. The room type can be either "deluxe" or "super_deluxe" or "suite".
        ii.  If an invalid room type is given to this functionality, we should get an error.
        iii. When a valid room type is given, you need to get the rooms from the database and filter the rooms based on the input type passed and return in the response.
             If room type is not given, you need to return all the rooms in response.
    Instruction:
        - Refer the getRooms function in RoomController class.
        - Refer the GetRoomsRequestDto and GetRoomsResponseDto classes for understanding the expected input and output to the functionality.
        - Refer the models package for reference of the models.
        - Implement the RoomRepository and RoomService interfaces to achieve the above requirements.
        - Please implement an in memory database to store the rooms. You can use any data structure of your choice to store the rooms.

III. Implement generate Invoice functionality for Hotel Management System.
    Problem Statement:
        You are building a Hotel Management System. As a part of this system, you need to implement functionality using which customers can generate invoice for their bookings.
    Requirements:
        i.   A customer can book multiple rooms before requesting for the invoice. Hence, our system must be able to track all the rooms booked by a customer.
                - We should have an entity called as CustomerSession in our system which will help us track the bookings by a customer.
                - Once the customer books their 1st room, we should create a CustomerSession for them with status as ACTIVE.
                - All the subsequent bookings by the customer should be associated with the CustomerSession created for them.
                - Once the customer requests for the invoice, we should mark the CustomerSession as ENDED.
        ii.  The request for generating the invoice will contain just the customer id.
        iii. This functionality should aggregate the rooms booked by the customer and calculate the total amount to be paid by the customer.
        iv.  This functionality should also calculate GST and service charge on the total amount.
        v.   GST will be 18% of the total rooms price and service charge will be 10% of the total rooms price.
        vi.  Return the invoice details in the response.
    Instructions:
        - Refer the generateInvoice function in BookingController class.
        - Refer the GenerateInvoiceRequestDto and GenerateInvoiceResponseDto classes for understanding the expected input and output to the functionality.
        - Refer the models package for reference of the models.
        - Implement the BookingRepository, CustomerSessionRepository and BookingService interfaces to achieve the above requirements.
        - Please implement an in memory database to store the rooms. You can use any data structure of your choice to store the rooms.